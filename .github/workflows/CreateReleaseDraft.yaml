name: Create Release Draft

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Plugin Version"
        required: true

jobs:
  build:
    name: GitHub Release v${{ github.event.inputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: "CountryRestrictor v${{ github.event.inputs.version }}"
          draft: true
          prerelease: false

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Update version
        run: 'sed -i "s#<Version>0.0.0</Version>#<Version>${{ github.event.inputs.version }}</Version>#" "shared.props"'
      - name: Update informational versions
        run: 'sed -i "s#<InformationalVersion>0.0.0</InformationalVersion>#<InformationalVersion>${{ github.event.inputs.version }}</InformationalVersion>#" "shared.props"'
      - name: Update package version
        run: 'sed -i "s#<PackageVersion>0.0.0</PackageVersion>#<PackageVersion>${{ github.event.inputs.version }}</PackageVersion>#" "shared.props"'

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Install zip
        run: sudo apt-get install zip

      - name: Zip RocketMod release
        run: |
          mkdir -p ./RocketMod/Plugins ./RocketMod/Libraries
          cd "./rocketmod/CountryRestrictor/bin/Release/net461"
          mv "CountryRestrictor.dll" ../../../../../RocketMod/Plugins
          cd ../../../../../RocketMod
          zip -qr ./RocketMod.zip *
          cd ..
        shell: bash

      - name: Upload RocketMod release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RocketMod/RocketMod.zip
          asset_name: "RocketMod.zip"
          asset_content_type: application/zip
